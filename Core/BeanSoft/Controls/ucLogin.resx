<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAdRJREFUWEft
        lctOFFEURRtJZCAwUvgH/AgaxoSHQPwEgwN0QgxhBIwUvoM4g+hnEN5TYvgAXgLpOEAO69TZxaRz7Wqq
        SCTplezJvvvsW4+uvrUOHZ4dZjaAVtEeupF20Qp6o9jTwAYz6Aql+I3eKV4tFPvmd74LbKJh9Eqqoy3k
        /EVTGqsGCv2x53e+ILsJ1r5ExC7Ra9nloczfubMpKwmZHxG1ZVnloWw/Om1YVhIyIxG1XVnloew6Oq1X
        VhIyfRG1K1nloewiOgtdQH9E7VxWeSjbiU6ry0pCZjSiti2rPJQtRadtyUpC5mdEbVFWeSgbRGdZLZ+a
        7CZYW4yInaIB2dVA4RS69XbwT81/7b2SP/b8zj0zqbFqoXga+T9dCl+bVrxaKB5Hx75LCzwzprHyUNaF
        1rxZHKB5NITys+At+oQOkeNnxlfUpZrHQ8m6N8If9AG90FITvobmlHW+aelxUDAZPVlhy7/hHLJ+OuYX
        MSG7PRjsQSdZBXcuuzDMfIxR+4Veyi4OQ++z8XjnyceegpludOQFMCu7OAx9j1mbl9U2zH6OCtuQVRyG
        /NE5Q7L+ibIPyPOvwznOQu3AUCNmW5+AjrIPyMuP5kYW6tDh/6NWuwcJlr3qomJjtgAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAQBJREFUWEft
        kTFuwkAURN2TdJDrODkCKFeJqCEHMsoRsNKaHAUILfzMeh+NkeUlu0iJ2CdNMZ/5429cZP4dZvYkvUsb
        6YAaaSlNiN0GPeBV2kt97KQZ8bSo2D385J4iKqmURuhZWkmOozRlLQ0qdH/7+c3fGF+g3+Y+YltpzDge
        lblv7qgY9aLMh4/aglE8KvvynVYy6kWZFx+1hlE8Kvv2nfbAqBdlHn3U9oziodCwgxAPzg9C350dQEcy
        qA2HvWRQGw570d+RmnxAPiDNAbKfUo0d9A75Fmw47HUPqKU1dtA75Fuw4bB3/WIHavIB+YDfH5AKasNh
        LxnUZv4aRfEDZHgnlLCO7YUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABzhJREFUeF7t
        nWvMHFMYx0svRC+ipVWqVfVFmmpJ69pqWi0hkaoQviHu2sYXSRPEBxFFVVK3CKVoWnpBQohLNEgRRBF3
        dadF3OJ+Cer3n3m2eWPmzOzuuzudnX1+yT82u8+c53nOa2fnnPOc0z6O4ziO4ziO4ziO4ziO4ziO4zjG
        1q1bh6LD0QnoNJNeH4aGmpnTLujkXdGZaBXagvLYjFaiM9AQa8bpLXTmgWgF+g01i669B02wZp1GofNG
        o3XoX9Qq1NYatI+5ceqBDpuPfkHtQm1faO6cEHTSIKRvRVHo2zLQ3Ds9oWN2Ry+qlxrkZ6QfcEmvG+UF
        NMzCcAQdoieo19Q7dfARWoSOQXtYE9vgveHoWHQ1+hjVw6vIn8QEHdEfPa1eyeEtNAftYJfmIlt0Inob
        5bEe9bdLuxc6YUnUHWF0GzoH9bVLGoZr+6HzUN6DwjV2SXdCB8xCWY+1n6CJZt5raOsg9KkaDqBYZpp5
        d0HiO6H31AsB3kDDzbxl0OYIpNtfiHfQADPvHkj6oij9dL5BY8205dD2OPStHAWYb6bdAQkPQJ9HqSf5
        G00307aBj5noHzlM4TPUPd8Skj01SjudZWbWdvB1d+wylVPMrPqQ7CNxzgl+R4XNM+FrbxSatHzIzKoN
        iQ5Ef0YpJ1lqZoWBz5ti1wn+QLuYWXUhSY2iQ0wys8LA5+TYdSqzzay6kOTlca4JNptJoeBXo/kvowiS
        XGZm1YUktYqXxhozKRx8h2aYV5hJdSHJ5+JcE1xhJoWD7yvjEBJsMJPqQpIagacxz0wKB98L4hASvG4m
        1YUkP4hzTXCWmRSOfMchJNhkJtWFJLX2kEYZvyEbzaS6kGRo7aOMvyHrzaS6kOS9ca4J1ppJ4eD7/jiE
        BCvNpLqQ5MI41wRbzKRQ8Js1DrnYzKoLSWotPMTBZlYY+JwSu05llplVF5JUqU9oQu8GMysMfN4cu07w
        K+qOEiESfTBKOYlme0ebWdvB175Ik4hprDOz6kOyWeshy82s7eBLNcMhumo9RKU/KmBIQyuGM8y0beBD
        BRahFUPVfvUz0+6AhFW/G0Lr3ePMtOXQ9v7oOzkKsN0GqdsNklbViSo8QryJRph5y6DNPVFW4Zw+676q
        E0HiR6Gsuqwv0GQz7zW0NQmFbpVCsbT9dllq6IDro64Io2rD81HT93Rdi+YhPcpmsdgu6V7oBHXWU1F3
        ZKPb21zUSG3vjugk9C7K40nUdLlqpaAjhqGN6pU60C1nMToOJX5jeE+/Ecej61BW2WhPXkG+UbQn6hD0
        snqnQXRL0yZQqZldV9qTspuF4fSEjhmMtKupKFajQebeCUEnLYu6q73cbu6cEHTSVPRE1F3F8Dg6wtw7
        NegUTfIVudmzJ7Wt0mMsnO6FTtDi0Lmomc2arUZjFC2e7WjhdRckrqeqR1GjaPJRG0TvQhpUXoouMOm1
        3tNnspFtozyMuuupi4THo3p3yNbQ+ONoNNiayUW2dk3WdEkaH6IDrJlqQ6Kav/pBWTeIpsrHWzN1wzUT
        UNZ8WQjNBk+1ZqoJCU5HefNJWTyP6p6JxVYzys0cRlBDA81p1ly1ILFDUN6P909IVYSh6kaxFu1szQaR
        DXpAFwSQD/mSzyz0ectmnEsBCelkn1CpTY0NKNroyX91LlYWmvc6Mmo8BT7TeCZUIVnjdLPdD4UKwGvo
        2I5RUeOdDonotqHJuyx0KNm2WxGvNUv7rD7IQX+Ya5Gm1iVNOub9IYSqJ7c93vJam1Dv0wcZvIQ6f+GK
        JPLWO5aixLM/741FWcuszaLl4cQgkPf0P8GNMshgiZl3JiQwDWU94WTuuOVz/e7k3eMb4Uc0xZpPhc9v
        iSzTUS6d+eRF4LpVZa1dax4pdxUQG/1RQnvaG0F7z3N/nLFRRYwWq0Jorb/zDqkh6KyTGjTwqvs4JGx1
        HEaoILoe9GRW9zEd2Oq4qKyBa2dVpRCwykW/jkJPoq99Uwe8cN0MpOmWUD1VT2Sj/fBNnQrBdVkH43yF
        OqfMlGCzvh23mlnT0MYYdDbSnNUzSIfJSHq9HGl80euSVNq4DYVYYGblhkD7otDATiPfxClwZYVYtdYf
        eqhQdWP5iyIIcnYUbjqLzKxjIGaNc0KU/2wtgrwzjjWB5rA65ttRg5h1hmNo+8QdZlZOCFC3q++jUJOs
        MrOOg9hDo3gNXMt72yI4HY4fYo6ZdRzErgK9EJkDze0KwV0Sx5hAI+TcGdqyothR6Md9oZmVD4ILDd4e
        M5OOhRxC1TCrzaR8ENymOMYEV5lJx0IOOrw5jffNpFwQmH7Q/4pCTDLXzDoWcjg5TiWBci5fpQpBjYrC
        S6dlZ+9uL8hBZ/6G2MvMygNBTYxjS6WwnbXtghxUzBeifP9QDEHp334KUXfpTlkhhyFxKqkcamblgaBG
        IlUhpqnuTTZlRTn8L6eeGmlmjuM4juM4juM4juM4juM4juOUjT59/gOnsvnorpn4nQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>