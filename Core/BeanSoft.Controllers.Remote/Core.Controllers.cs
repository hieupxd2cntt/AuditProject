//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using Core.Entities;
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://rbs.vn/", ConfigurationName="ISAController")]
internal interface ISAController
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetSystemLog", ReplyAction="http://rbs.vn/ISAController/GetSystemLogResponse")]
    string GetSystemLog(bool clearLog);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetServerInfo", ReplyAction="http://rbs.vn/ISAController/GetServerInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="serverInfo")]
    Core.ServerInfo GetServerInfo(out Core.Entities.CachedHashInfo cachedInfoHash, string clientLanguageID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetCurrentSessionInfo", ReplyAction="http://rbs.vn/ISAController/GetCurrentSessionInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="session")]
    Core.Entities.Session GetCurrentSessionInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/InitializeSessionID", ReplyAction="http://rbs.vn/ISAController/InitializeSessionIDResponse")]
    void InitializeSessionID(string sessionID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetSessionUserInfo", ReplyAction="http://rbs.vn/ISAController/GetSessionUserInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="userInfo")]
    Core.Entities.User GetSessionUserInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/CheckRole", ReplyAction="http://rbs.vn/ISAController/CheckRoleResponse")]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.ImportModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.ReportModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.ChartModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.MaintainModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.SearchModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.SwitchModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.ExecProcModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.AlertModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.StatisticsModuleInfo))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Core.Entities.DashboardInfo))]

    void CheckRole(Core.Entities.ModuleInfo moduleInfo);
    //add by TrungTT - 27.12.2012 - Userlog
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteUsersLog", ReplyAction = "http://rbs.vn/ISAController/ExecuteUsersLogResponse")]
    void ExecuteUsersLog(string moduleID, string moduleName,string subMod);
    //End TrungTT
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListCurrentRoles", ReplyAction="http://rbs.vn/ISAController/ListCurrentRolesResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="roles")]
    System.Collections.Generic.List<Core.Entities.Role> ListCurrentRoles();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListCodesInfo", ReplyAction="http://rbs.vn/ISAController/ListCodesInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="codesInfo")]
    System.Collections.Generic.List<Core.Entities.CodeInfo> ListCodesInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListErrorsInfo", ReplyAction="http://rbs.vn/ISAController/ListErrorsInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="errorsInfo")]
    System.Collections.Generic.List<Core.Entities.ErrorInfo> ListErrorsInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListValidatesInfo", ReplyAction="http://rbs.vn/ISAController/ListValidatesInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="validatesInfo")]
    System.Collections.Generic.List<Core.Entities.ValidateInfo> ListValidatesInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListLanguage", ReplyAction="http://rbs.vn/ISAController/ListLanguageResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="languageInfos")]
    System.Collections.Generic.List<Core.Entities.LanguageInfo> ListLanguage(string languageID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListMenuItems", ReplyAction="http://rbs.vn/ISAController/ListMenuItemsResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="menuItems")]
    System.Collections.Generic.List<Core.Entities.MenuItemInfo> ListMenuItems();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListRibbonItems", ReplyAction="http://rbs.vn/ISAController/ListRibbonItemsResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="ribbonItems")]
    System.Collections.Generic.List<Core.Entities.RibbonItemInfo> ListRibbonItems();

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ListExportHeaderInfo", ReplyAction = "http://rbs.vn/ISAController/ListExportHeaderInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "ExportHeaderInfos")]
    System.Collections.Generic.List<Core.Entities.ExportHeader> ListExportHeaderInfo();

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ListSysvarInfo", ReplyAction = "http://rbs.vn/ISAController/ListSysvarInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "SysvarInfos")]
    System.Collections.Generic.List<Core.Entities.SysvarInfo> ListSysvarInfo();

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ListGroupSummaryInfo", ReplyAction = "http://rbs.vn/ISAController/ListGroupSummaryInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "groupSummaryInfos")]
    System.Collections.Generic.List<Core.Entities.GroupSummaryInfo> ListGroupSummaryInfo();

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ListModuleInfo", ReplyAction = "http://rbs.vn/ISAController/ListModuleInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="moduleInfos")]
    System.Collections.Generic.List<Core.Entities.ModuleInfo> ListModuleInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListBatchInfo", ReplyAction="http://rbs.vn/ISAController/ListBatchInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="moduleInfos")]
    System.Collections.Generic.List<Core.Entities.BatchInfo> ListBatchInfo(string moduleID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListModuleField", ReplyAction="http://rbs.vn/ISAController/ListModuleFieldResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="moduleFields")]
    System.Collections.Generic.List<Core.Entities.ModuleFieldInfo> ListModuleField(out int endRow, int startRow);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetDataSource", ReplyAction="http://rbs.vn/ISAController/GetDataSourceResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="sourceData")]
    System.Collections.Generic.List<Core.Entities.NameValueItem> GetDataSource(string sourceName, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/TerminalCurrentSession", ReplyAction="http://rbs.vn/ISAController/TerminalCurrentSessionResponse")]
    void TerminalCurrentSession();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/CreateUserSession", ReplyAction="http://rbs.vn/ISAController/CreateUserSessionResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="session")]
    Core.Entities.Session CreateUserSession(string userName, string password, string clientIP, string clientMacAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListSearchButton", ReplyAction="http://rbs.vn/ISAController/ListSearchButtonResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="buttons")]
    System.Collections.Generic.List<Core.Entities.ButtonInfo> ListSearchButton();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListSearchButtonParam", ReplyAction="http://rbs.vn/ISAController/ListSearchButtonParamResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchButtonParamsInfo")]
    System.Collections.Generic.List<Core.Entities.ButtonParamInfo> ListSearchButtonParam();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteSwitchModule", ReplyAction="http://rbs.vn/ISAController/ExecuteSwitchModuleResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="targetModule")]
    string ExecuteSwitchModule(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteMaintainQuery", ReplyAction="http://rbs.vn/ISAController/ExecuteMaintainQueryResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="executeResult")]
    Core.Base.DataContainer ExecuteMaintainQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteTransQuery", ReplyAction = "http://rbs.vn/ISAController/ExecuteTransQueryResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "executeResult")]
    Core.Base.DataContainer ExecuteTransQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    //Tudq them

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetTreeViewStore", ReplyAction = "http://rbs.vn/ISAController/GetTreeViewStoreResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "executeResult")]
    Core.Base.DataContainer GetTreeViewStore(System.Collections.Generic.List<string> values);


    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetTreeViewLang", ReplyAction = "http://rbs.vn/ISAController/GetTreeViewLangResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "executeResult")]
    Core.Base.DataContainer GetTreeViewLang(System.Collections.Generic.List<string> values);
    //
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteReport", ReplyAction="http://rbs.vn/ISAController/ExecuteReportResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteReport(string moduleID, string subModule, System.Collections.Generic.List<string> values);

    //add by TrungTT - 10.11.2011 - Maintain report
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteMaintainReport", ReplyAction = "http://rbs.vn/ISAController/ExecuteMaintainReportResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteMaintainReport(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    //end TrungTT

    //add by TrungTT - 8.11.2011 - Auto Report
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteAutoReport", ReplyAction = "http://rbs.vn/ISAController/ExecuteAutoReportResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteAutoReport(string moduleID, string batchName, System.Collections.Generic.List<string> values);
    //End TrungTT
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteMarket", ReplyAction="http://rbs.vn/ISAController/ExecuteMarketResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteMarket();

    //add bytrungtt - 23.09.2011 - Menu Skins
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteLoadSkins", ReplyAction = "http://rbs.vn/ISAController/ExecuteLoadSkinsResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteLoadSkins();
    //end TrungTT

    //add bytrungtt - 27.09.2011 - Get System Date
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetSysDate", ReplyAction = "http://rbs.vn/ISAController/GetSysDateResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer GetSysDate();
    //end TrungTT

    //add bytrungtt - 26.09.2011 - Load Current Skins
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteLoadCurrentSkins", ReplyAction = "http://rbs.vn/ISAController/ExecuteLoadCurrentSkinsResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteLoadCurrentSkins();
    //end TrungTT

    //add by trungtt - 25.08.2011 - update market
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/UpdateMarket", ReplyAction = "http://rbs.vn/ISAController/UpdateMarketResponse")]
    void UpdateMarket(System.Collections.Generic.List<string> values);
    //end trungtt

    //add by trungtt - 26.09.2011 - Change Skins
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteChangeSkins", ReplyAction = "http://rbs.vn/ISAController/ExecuteChangeSkinsResponse")]
    void ExecuteChangeSkins(System.Collections.Generic.List<string> values);
    //end trungtt

    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteDownloadFile", ReplyAction="http://rbs.vn/ISAController/ExecuteDownloadFileResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteDownloadFile(string moduleID,string subModule,System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteImport", ReplyAction="http://rbs.vn/ISAController/ExecuteImportResponse")]
    void ExecuteImport(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteMaintain", ReplyAction="http://rbs.vn/ISAController/ExecuteMaintainResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteMaintain(string moduleID, string subModule, System.Collections.Generic.List<string> values);

    //add by trungtt - 23.8.2013
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecApprove", ReplyAction = "http://rbs.vn/ISAController/ExecApproveResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecApprove(string moduleID, string subModule,string secID, System.Collections.Generic.List<string> values);
    //end trungtt

    //[System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteApproved", ReplyAction = "http://rbs.vn/ISAController/ExecuteApprovedResponse")]
    //[return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    //FIS.Base.DataContainer ExecuteApproved(string moduleID, string subModule, System.Collections.Generic.List<string> values);


    //add by TrungTT - 08.12.2011 - Edit Grid's column Layout
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetExtraCurrentUserProfile", ReplyAction = "http://rbs.vn/ISAController/GetExtraCurrentUserProfileResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "extraValue")]
    string GetExtraCurrentUserProfile(string extraProperty);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/SetExtraCurrentUserProfile", ReplyAction = "http://rbs.vn/ISAController/SetExtraCurrentUserProfileResponse")]
    void SetExtraCurrentUserProfile(string extraProperty,string extraValue);
    
    //End TrungTT

    //add by TrungTT - 9.11.2011 - Bactch put msg
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteBatchPutMsg", ReplyAction = "http://rbs.vn/ISAController/ExecuteBatchPutMsgResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteBatchPutMsg(string moduleID, string storeData, System.Collections.Generic.List<string> values);
    //end TrungTT
    
    //add by TrungTT - 28.11.2011 - Execute procedure fill dataset
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteProcedureFillDataset", ReplyAction = "http://rbs.vn/ISAController/ExecuteProcedureFillDatasetResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteProcedureFillDataset(string storeData, System.Collections.Generic.List<string> values);
    //end TrungTT

    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteChartMaster", ReplyAction="http://rbs.vn/ISAController/ExecuteChartMasterResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="executeResult")]
    Core.Base.DataContainer ExecuteChartMaster(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteProcedure", ReplyAction="http://rbs.vn/ISAController/ExecuteProcedureResponse")]
    void ExecuteProcedure(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteInstallModule", ReplyAction="http://rbs.vn/ISAController/ExecuteInstallModuleResponse")]
    void ExecuteInstallModule(string modulePackageData);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteUninstallModule", ReplyAction="http://rbs.vn/ISAController/ExecuteUninstallModuleResponse")]
    void ExecuteUninstallModule(string moduleID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteSaveLanguage", ReplyAction="http://rbs.vn/ISAController/ExecuteSaveLanguageResponse")]
    void ExecuteSaveLanguage(string langID, string langName, string langValue);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteGenerateModulePackage", ReplyAction="http://rbs.vn/ISAController/ExecuteGenerateModulePackageResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="generatedPackage")]
    string ExecuteGenerateModulePackage(string moduleID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ValidateFieldInfoSyntax", ReplyAction="http://rbs.vn/ISAController/ValidateFieldInfoSyntaxResponse")]
    void ValidateFieldInfoSyntax(string moduleID, string subModule, string fieldID, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/CallbackQuery", ReplyAction="http://rbs.vn/ISAController/CallbackQueryResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="executeResult")]
    Core.Base.DataContainer CallbackQuery(string moduleID, string callbackFieldID, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListOracleParameter", ReplyAction="http://rbs.vn/ISAController/ListOracleParameterResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="oracleParams")]
    System.Collections.Generic.List<Core.Entities.OracleParam> ListOracleParameter();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/FetchAllSearchResult", ReplyAction="http://rbs.vn/ISAController/FetchAllSearchResultResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchResult")]
    Core.Base.DataContainer FetchAllSearchResult(string moduleID, string subModule, string searchResultKey, System.DateTime searchTime, int fromRow);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/FetchSearchResult", ReplyAction="http://rbs.vn/ISAController/FetchSearchResultResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchResult")]
    Core.Base.DataContainer FetchSearchResult(out int bufferSize, out int minPage, out int maxPage, out int startRow, string moduleID, string subModule, string searchResultKey, System.DateTime searchTime, int selectedPage, int maxPageSize);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/DisposeSearchResult", ReplyAction="http://rbs.vn/ISAController/DisposeSearchResultResponse")]
    void DisposeSearchResult(string moduleID, string subModule, string searchResultKey, System.DateTime searchTime);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetSearchStatistic", ReplyAction="http://rbs.vn/ISAController/GetSearchStatisticResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchStatistic")]
    Core.Base.DataContainer GetSearchStatistic(string moduleID, string subModule, Core.Entities.SearchConditionInstance conditionIntance, System.Collections.Generic.List<Core.Entities.SearchConditionInstance> staticConditionInstances);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteSearch", ReplyAction="http://rbs.vn/ISAController/ExecuteSearchResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchResultKey")]
    string ExecuteSearch(out System.DateTime searchTime, string moduleID, string subModule, Core.Entities.SearchConditionInstance conditionIntance, System.Collections.Generic.List<Core.Entities.SearchConditionInstance> staticConditionInstances);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteSearchEdit", ReplyAction="http://rbs.vn/ISAController/ExecuteSearchEditResponse")]
    void ExecuteSearchEdit(string moduleID, string subModule, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListGroupRoles", ReplyAction="http://rbs.vn/ISAController/ListGroupRolesResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="roles")]
    System.Collections.Generic.List<Core.Entities.Role> ListGroupRoles(int groupID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListUserRoles", ReplyAction="http://rbs.vn/ISAController/ListUserRolesResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="roles")]
    System.Collections.Generic.List<Core.Entities.Role> ListUserRoles(int userID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/SaveGroupRoles", ReplyAction="http://rbs.vn/ISAController/SaveGroupRolesResponse")]
    void SaveGroupRoles(System.Collections.Generic.List<Core.Entities.Role> roles, int groupID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/SaveUserRoles", ReplyAction="http://rbs.vn/ISAController/SaveUserRolesResponse")]
    void SaveUserRoles(System.Collections.Generic.List<Core.Entities.Role> roles, int userID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteAlert", ReplyAction="http://rbs.vn/ISAController/ExecuteAlertResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="alertResult")]
    Core.Base.DataContainer ExecuteAlert(string moduleID, string subModule);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteBatch", ReplyAction="http://rbs.vn/ISAController/ExecuteBatchResponse")]
    void ExecuteBatch(string moduleID, string batchName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteBatchMarket", ReplyAction="http://rbs.vn/ISAController/ExecuteBatchMarketResponse")]
    void ExecuteBatchMarket(string moduleID, string batchName, string market);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteAlertClick", ReplyAction="http://rbs.vn/ISAController/ExecuteAlertClickResponse")]
    void ExecuteAlertClick(string moduleID, string subModule);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetListSource", ReplyAction="http://rbs.vn/ISAController/GetListSourceResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="listSource")]
    System.Collections.Generic.List<Core.Entities.NameValueItem> GetListSource(string moduleID, string subModule, string fieldID, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/SaveLayout", ReplyAction="http://rbs.vn/ISAController/SaveLayoutResponse")]
    void SaveLayout(string moduleID, string subModule, string languageID, string layout);
    
    //[System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/SaveFile", ReplyAction="http://rbs.vn/ISAController/SaveFileResponse")]
    //void SaveFile(string filename, byte[] file);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/SaveFile", ReplyAction = "http://rbs.vn/ISAController/SaveFileResponse")]
    void SaveFile(FileUpload file);

    //trungtt - 20.12.2013 - sign file
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/SignFile", ReplyAction = "http://rbs.vn/ISAController/SignFileResponse")]
    void SignFile(string filename, string certificateinfo, string worker, byte[] file);
    //end trungtt
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteSQL", ReplyAction="http://rbs.vn/ISAController/ExecuteSQLResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="container")]
    Core.Base.DataContainer ExecuteSQL(string sqlQuery);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteStoreProcedure", ReplyAction="http://rbs.vn/ISAController/ExecuteStoreProcedureResponse")]
    void ExecuteStoreProcedure(string storeProcedure, System.Collections.Generic.List<string> values);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ResetCache", ReplyAction="http://rbs.vn/ISAController/ResetCacheResponse")]
    void ResetCache();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/CheckUpdate", ReplyAction="http://rbs.vn/ISAController/CheckUpdateResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="fileContent")]
    string CheckUpdate(string clientVersion);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/NewsInfo", ReplyAction="http://rbs.vn/ISAController/NewsInfoResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="newsInfo")]
    System.Collections.Generic.List<Core.Entities.NewsInfo> NewsInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/GetCurrentUserProfile", ReplyAction="http://rbs.vn/ISAController/GetCurrentUserProfileResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="userProfile")]
    Core.Entities.UserProfile GetCurrentUserProfile();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ListUsersInGroup", ReplyAction="http://rbs.vn/ISAController/ListUsersInGroupResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="users")]
    System.Collections.Generic.List<Core.Entities.User> ListUsersInGroup(int groupID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ForceLoadModule", ReplyAction="http://rbs.vn/ISAController/ForceLoadModuleResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="modulesInfo")]
    System.Collections.Generic.List<Core.Entities.ModuleInfo> ForceLoadModule(out System.Collections.Generic.List<Core.Entities.ModuleFieldInfo> fieldsInfo, out System.Collections.Generic.List<Core.Entities.ButtonInfo> buttonsInfo, out System.Collections.Generic.List<Core.Entities.ButtonParamInfo> buttonParamsInfo, out System.Collections.Generic.List<Core.Entities.LanguageInfo> languageInfo, out System.Collections.Generic.List<Core.Entities.OracleParam> oracleParamsInfo, string moduleID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://rbs.vn/ISAController/ExecuteStatistics", ReplyAction="http://rbs.vn/ISAController/ExecuteStatisticsResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="searchResultKey")]
    string ExecuteStatistics(out System.DateTime searchTime, string moduleID, string subModule, System.Collections.Generic.List<string> values);

    //TuDQ sua
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteChartQuery", ReplyAction = "http://rbs.vn/ISAController/ExecuteChartQueryResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "chartResult")]
    System.Data.DataSet ExecuteChartQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetChartInf", ReplyAction = "http://rbs.vn/ISAController/GetChartInfResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "chartResult")]
    System.Data.DataSet GetChartInf(System.Collections.Generic.List<string> values);
    //End

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/GetModImport", ReplyAction = "http://rbs.vn/ISAController/GetModImportResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "executeResult")]
    System.Data.DataSet GetModImport(string rptID);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/Reconnect", ReplyAction = "http://rbs.vn/ISAController/ReconnectResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "ReconnectResult")]
    bool Reconnect(out DevExpress.DataAccess.ConnectionParameters.OracleConnectionParameters ocp);

    //duchvm
    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/BulkInsert", ReplyAction = "http://rbs.vn/ISAController/BulkInsertResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "executeResult")]
    bool BulkInsert(string storeData, System.Data.DataTable values);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExcelDataUpload", ReplyAction = "http://rbs.vn/ISAController/ExcelDataUploadResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    string ExcelDataUpload(System.Collections.Generic.List<System.Data.DataTable> values,string ExcelTemplateId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ExecuteProcedureFillDatasetWithoutPram", ReplyAction = "http://rbs.vn/ISAController/ExecuteProcedureFillDatasetWithoutPramResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ExecuteProcedureFillDatasetWithoutPram(string storeData);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/ProcedureFillDataset", ReplyAction = "http://rbs.vn/ISAController/ProcedureFillDatasetResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "container")]
    Core.Base.DataContainer ProcedureFillDataset(string storeData, System.Collections.Generic.List<string> values);

    [System.ServiceModel.OperationContractAttribute(Action = "http://rbs.vn/ISAController/AsyncCreateUserSession", ReplyAction = "http://rbs.vn/ISAController/AsyncCreateUserSessionResponse")]
    [return: System.ServiceModel.MessageParameterAttribute(Name = "session")]
    System.Threading.Tasks.Task<Core.Entities.Session> AsyncCreateUserSession(string userName, string password);
    //end duchvm
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
internal interface ISAControllerChannel : ISAController, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
internal partial class SAControllerClient : System.ServiceModel.ClientBase<ISAController>, ISAController
{
    
    public SAControllerClient()
    {
    }
    
    public SAControllerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public SAControllerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SAControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SAControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }

    public System.Data.DataSet GetModImport(string rptID)
    {
        return base.Channel.GetModImport(rptID);
    }

    public string GetSystemLog(bool clearLog)
    {
        return base.Channel.GetSystemLog(clearLog);
    }
    
    public Core.ServerInfo GetServerInfo(out Core.Entities.CachedHashInfo cachedInfoHash, string clientLanguageID)
    {
        return base.Channel.GetServerInfo(out cachedInfoHash, clientLanguageID);
    }
    
    public Core.Entities.Session GetCurrentSessionInfo()
    {
        return base.Channel.GetCurrentSessionInfo();
    }
    
    public void InitializeSessionID(string sessionID)
    {
        base.Channel.InitializeSessionID(sessionID);
    }
    
    public Core.Entities.User GetSessionUserInfo()
    {
        return base.Channel.GetSessionUserInfo();
    }
    
    public void CheckRole(Core.Entities.ModuleInfo moduleInfo)
    {
        base.Channel.CheckRole(moduleInfo);
    }
    //add by TrungTT - 27.12.2012 - Userlog
    public void ExecuteUsersLog(string moduleID, string moduleName,string subMod)
    {
        base.Channel.ExecuteUsersLog(moduleID, moduleName,subMod);
    }
    //End TrungTT
    public System.Collections.Generic.List<Core.Entities.Role> ListCurrentRoles()
    {
        return base.Channel.ListCurrentRoles();
    }
    
    public System.Collections.Generic.List<Core.Entities.CodeInfo> ListCodesInfo()
    {
        return base.Channel.ListCodesInfo();
    }
    
    public System.Collections.Generic.List<Core.Entities.ErrorInfo> ListErrorsInfo()
    {
        return base.Channel.ListErrorsInfo();
    }
    
    public System.Collections.Generic.List<Core.Entities.ValidateInfo> ListValidatesInfo()
    {
        return base.Channel.ListValidatesInfo();
    }
    
    public System.Collections.Generic.List<Core.Entities.LanguageInfo> ListLanguage(string languageID)
    {
        return base.Channel.ListLanguage(languageID);
    }
    
    public System.Collections.Generic.List<Core.Entities.MenuItemInfo> ListMenuItems()
    {
        return base.Channel.ListMenuItems();
    }
    
    public System.Collections.Generic.List<Core.Entities.RibbonItemInfo> ListRibbonItems()
    {
        return base.Channel.ListRibbonItems();
    }

    public System.Collections.Generic.List<Core.Entities.GroupSummaryInfo> ListGroupSummaryInfo()
    {
        return base.Channel.ListGroupSummaryInfo();
    }

    public System.Collections.Generic.List<Core.Entities.ExportHeader> ListExportHeaderInfo()
    {
        return base.Channel.ListExportHeaderInfo();
    }

    public System.Collections.Generic.List<Core.Entities.SysvarInfo> ListSysvarInfo()
    {
        return base.Channel.ListSysvarInfo();
    }

    public System.Collections.Generic.List<Core.Entities.ModuleInfo> ListModuleInfo()
    {
        return base.Channel.ListModuleInfo();
    }
    
    public System.Collections.Generic.List<Core.Entities.BatchInfo> ListBatchInfo(string moduleID)
    {
        return base.Channel.ListBatchInfo(moduleID);
    }
    
    public System.Collections.Generic.List<Core.Entities.ModuleFieldInfo> ListModuleField(out int endRow, int startRow)
    {
        return base.Channel.ListModuleField(out endRow, startRow);
    }
    
    public System.Collections.Generic.List<Core.Entities.NameValueItem> GetDataSource(string sourceName, System.Collections.Generic.List<string> values)
    {
        return base.Channel.GetDataSource(sourceName, values);
    }
    
    public void TerminalCurrentSession()
    {
        base.Channel.TerminalCurrentSession();
    }
    
    public Core.Entities.Session CreateUserSession(string userName, string password, string clientIP, string clientMacAddress)
    {
        return base.Channel.CreateUserSession(userName, password, clientIP, clientMacAddress);
    }

    //duchvm
    public System.Threading.Tasks.Task<Core.Entities.Session> AsyncCreateUserSession(string userName, string password)
    {
        return base.Channel.AsyncCreateUserSession(userName, password);
    }
    //endduchvm

    public System.Collections.Generic.List<Core.Entities.ButtonInfo> ListSearchButton()
    {
        return base.Channel.ListSearchButton();
    }
    
    public System.Collections.Generic.List<Core.Entities.ButtonParamInfo> ListSearchButtonParam()
    {
        return base.Channel.ListSearchButtonParam();
    }
    
    public string ExecuteSwitchModule(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteSwitchModule(moduleID, subModule, values);
    }
    
    public Core.Base.DataContainer ExecuteMaintainQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteMaintainQuery(moduleID, subModule, values);
    }

    public Core.Base.DataContainer ExecuteTransQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteTransQuery(moduleID, subModule, values);
    }

    //TUDQ them

    public Core.Base.DataContainer GetTreeViewStore(System.Collections.Generic.List<string> values)
    {
        return base.Channel.GetTreeViewStore(values);
    }

    public Core.Base.DataContainer GetTreeViewLang(System.Collections.Generic.List<string> values)
    {
        return base.Channel.GetTreeViewLang(values);
    }

    //
    
    public Core.Base.DataContainer ExecuteReport(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteReport(moduleID, subModule, values);
    }
    
    //add by TrungTT - 10.11.2011 - Maintain Report
    public Core.Base.DataContainer ExecuteMaintainReport(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteMaintainReport(moduleID, subModule, values);
    }
    //End TrungTT
    //add by TrungTT - 8.11.2011 - Auto Report
    public Core.Base.DataContainer ExecuteAutoReport(string moduleID, string batchName, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteAutoReport(moduleID, batchName, values);
    }
    //End TrungTT
    
    public Core.Base.DataContainer ExecuteMarket()
    {
        return base.Channel.ExecuteMarket();
    }

    //add by TrungTT - 23.09.2011 - Menu Skins
    public Core.Base.DataContainer ExecuteLoadSkins()
    {
        return base.Channel.ExecuteLoadSkins();
    }
    //end TrungTT

    //add by TrungTT - 27.09.2011 - Get System Date
    public Core.Base.DataContainer GetSysDate()
    {
        return base.Channel.GetSysDate();
    }

    //add by TrungTT - 26.09.2011 - Load Current Skin
    public Core.Base.DataContainer ExecuteLoadCurrentSkins()
    {
        return base.Channel.ExecuteLoadCurrentSkins();
    }
    //end TrungTT

    //add by trungtt - 25.08.2011 - Update Market
    public void UpdateMarket(System.Collections.Generic.List<string> values)
    {
        base.Channel.UpdateMarket(values);
    }
    //end trungtt

    //add by TrungTT - 26.09.2011 - Change Skins
    public void ExecuteChangeSkins(System.Collections.Generic.List<string> values)
    {
        base.Channel.ExecuteChangeSkins(values);
    }
    //End TrungTT

    public Core.Base.DataContainer ExecuteDownloadFile(string moduleID, string subModule,System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteDownloadFile(moduleID, subModule, values);
    }
    
    public void ExecuteImport(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        base.Channel.ExecuteImport(moduleID, subModule, values);
    }
    
    public Core.Base.DataContainer ExecuteMaintain(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteMaintain(moduleID, subModule, values);
    }

    //add by trungtt - 28.3.2013
    public Core.Base.DataContainer ExecApprove(string moduleID, string subModule,string secID, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecApprove(moduleID, subModule,secID, values);
    }
    //end trungtt

    //public FIS.Base.DataContainer ExecuteApproved(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    //{
    //    return base.Channel.ExecuteApproved(moduleID, subModule, values);
    //}

    //add by TrungTT - 08.12.2011 - Edit Grid's column layout 
    public string GetExtraCurrentUserProfile(string extraProperty)
    {
        return base.Channel.GetExtraCurrentUserProfile(extraProperty);
    }
    public void SetExtraCurrentUserProfile(string extraProperty,string extraValue)
    {
        base.Channel.SetExtraCurrentUserProfile(extraProperty, extraValue);
    }
    //end trungtt

    //add by TrungTT - 9.11.2011 - Batch put Msg
    public Core.Base.DataContainer ExecuteBatchPutMsg(string moduleID, string storeData, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteBatchPutMsg(moduleID, storeData, values);
    }
    //End TrungTT
    public bool Reconnect(out DevExpress.DataAccess.ConnectionParameters.OracleConnectionParameters ocp)
    {
        return base.Channel.Reconnect(out ocp);
    }
    //add by TrungTT - 28.11.2011 - Execute Procedure Fill Dataset
    public Core.Base.DataContainer ExecuteProcedureFillDataset(string storeData, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteProcedureFillDataset(storeData, values);
    }
    //End TrungTT

    //add by duchvm - 27.6.2016 - Execute Bulk Insert
    public bool BulkInsert(string storeData,System.Data.DataTable values)
    {
        return base.Channel.BulkInsert(storeData, values);
    }

    public string ExcelDataUpload(System.Collections.Generic.List<System.Data.DataTable> values ,string ExcelTemplateId)
    {
        return base.Channel.ExcelDataUpload(values , ExcelTemplateId);
    }
    //End duchvm

    public Core.Base.DataContainer ExecuteChartMaster(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteChartMaster(moduleID, subModule, values);
    }
    
    public void ExecuteProcedure(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        base.Channel.ExecuteProcedure(moduleID, subModule, values);
    }
    
    public void ExecuteInstallModule(string modulePackageData)
    {
        base.Channel.ExecuteInstallModule(modulePackageData);
    }
    
    public void ExecuteUninstallModule(string moduleID)
    {
        base.Channel.ExecuteUninstallModule(moduleID);
    }
    
    public void ExecuteSaveLanguage(string langID, string langName, string langValue)
    {
        base.Channel.ExecuteSaveLanguage(langID, langName, langValue);
    }
    
    public string ExecuteGenerateModulePackage(string moduleID)
    {
        return base.Channel.ExecuteGenerateModulePackage(moduleID);
    }
    
    public void ValidateFieldInfoSyntax(string moduleID, string subModule, string fieldID, System.Collections.Generic.List<string> values)
    {
        base.Channel.ValidateFieldInfoSyntax(moduleID, subModule, fieldID, values);
    }
    
    public Core.Base.DataContainer CallbackQuery(string moduleID, string callbackFieldID, System.Collections.Generic.List<string> values)
    {
        return base.Channel.CallbackQuery(moduleID, callbackFieldID, values);
    }
    
    public System.Collections.Generic.List<Core.Entities.OracleParam> ListOracleParameter()
    {
        return base.Channel.ListOracleParameter();
    }
    
    public Core.Base.DataContainer FetchAllSearchResult(string moduleID, string subModule, string searchResultKey, System.DateTime searchTime, int fromRow)
    {
        return base.Channel.FetchAllSearchResult(moduleID, subModule, searchResultKey, searchTime, fromRow);
    }
    
    public Core.Base.DataContainer FetchSearchResult(out int bufferSize, out int minPage, out int maxPage, out int startRow, string moduleID, string subModule, string searchResultKey, System.DateTime searchTime, int selectedPage, int maxPageSize)
    {
        return base.Channel.FetchSearchResult(out bufferSize, out minPage, out maxPage, out startRow, moduleID, subModule, searchResultKey, searchTime, selectedPage, maxPageSize);
    }
    
    public void DisposeSearchResult(string moduleID, string subModule, string searchResultKey, System.DateTime searchTime)
    {
        base.Channel.DisposeSearchResult(moduleID, subModule, searchResultKey, searchTime);
    }
    
    public Core.Base.DataContainer GetSearchStatistic(string moduleID, string subModule, Core.Entities.SearchConditionInstance conditionIntance, System.Collections.Generic.List<Core.Entities.SearchConditionInstance> staticConditionInstances)
    {
        return base.Channel.GetSearchStatistic(moduleID, subModule, conditionIntance, staticConditionInstances);
    }
    
    public string ExecuteSearch(out System.DateTime searchTime, string moduleID, string subModule, Core.Entities.SearchConditionInstance conditionIntance, System.Collections.Generic.List<Core.Entities.SearchConditionInstance> staticConditionInstances)
    {
        return base.Channel.ExecuteSearch(out searchTime, moduleID, subModule, conditionIntance, staticConditionInstances);
    }
    
    public void ExecuteSearchEdit(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        base.Channel.ExecuteSearchEdit(moduleID, subModule, values);
    }
    
    public System.Collections.Generic.List<Core.Entities.Role> ListGroupRoles(int groupID)
    {
        return base.Channel.ListGroupRoles(groupID);
    }
    
    public System.Collections.Generic.List<Core.Entities.Role> ListUserRoles(int userID)
    {
        return base.Channel.ListUserRoles(userID);
    }
    
    public void SaveGroupRoles(System.Collections.Generic.List<Core.Entities.Role> roles, int groupID)
    {
        base.Channel.SaveGroupRoles(roles, groupID);
    }
    
    public void SaveUserRoles(System.Collections.Generic.List<Core.Entities.Role> roles, int userID)
    {
        base.Channel.SaveUserRoles(roles, userID);
    }
    
    public Core.Base.DataContainer ExecuteAlert(string moduleID, string subModule)
    {
        return base.Channel.ExecuteAlert(moduleID, subModule);
    }
    
    public void ExecuteBatch(string moduleID, string batchName)
    {
        base.Channel.ExecuteBatch(moduleID, batchName);
    }
    
    public void ExecuteBatchMarket(string moduleID, string batchName, string market)
    {
        base.Channel.ExecuteBatchMarket(moduleID, batchName, market);
    }
    
    public void ExecuteAlertClick(string moduleID, string subModule)
    {
        base.Channel.ExecuteAlertClick(moduleID, subModule);
    }
    
    public System.Collections.Generic.List<Core.Entities.NameValueItem> GetListSource(string moduleID, string subModule, string fieldID, System.Collections.Generic.List<string> values)
    {
        return base.Channel.GetListSource(moduleID, subModule, fieldID, values);
    }
    
    public void SaveLayout(string moduleID, string subModule, string languageID, string layout)
    {
        base.Channel.SaveLayout(moduleID, subModule, languageID, layout);
    }

    //public void SaveFile(string filename, byte[] file)
    //{
    //    base.Channel.SaveFile(filename, file);
    //}

    public void SaveFile(FileUpload file)
    {
        base.Channel.SaveFile(file);
    }

    //trungtt - 20.12.2013 - sign file
    public void SignFile(string filename, string certificateinfo, string worker, byte[] file)
    {
        base.Channel.SignFile(filename, certificateinfo, worker, file);
    }
    //end trungtt
    
    public Core.Base.DataContainer ExecuteSQL(string sqlQuery)
    {
        return base.Channel.ExecuteSQL(sqlQuery);
    }
    
    public void ExecuteStoreProcedure(string storeProcedure, System.Collections.Generic.List<string> values)
    {
        base.Channel.ExecuteStoreProcedure(storeProcedure, values);
    }
    
    public void ResetCache()
    {
        base.Channel.ResetCache();
    }
    
    public string CheckUpdate(string clientVersion)
    {
        return base.Channel.CheckUpdate(clientVersion);
    }
    
    public System.Collections.Generic.List<Core.Entities.NewsInfo> NewsInfo()
    {
        return base.Channel.NewsInfo();
    }
    
    public Core.Entities.UserProfile GetCurrentUserProfile()
    {
        return base.Channel.GetCurrentUserProfile();
    }
    
    public System.Collections.Generic.List<Core.Entities.User> ListUsersInGroup(int groupID)
    {
        return base.Channel.ListUsersInGroup(groupID);
    }
    
    public System.Collections.Generic.List<Core.Entities.ModuleInfo> ForceLoadModule(out System.Collections.Generic.List<Core.Entities.ModuleFieldInfo> fieldsInfo, out System.Collections.Generic.List<Core.Entities.ButtonInfo> buttonsInfo, out System.Collections.Generic.List<Core.Entities.ButtonParamInfo> buttonParamsInfo, out System.Collections.Generic.List<Core.Entities.LanguageInfo> languageInfo, out System.Collections.Generic.List<Core.Entities.OracleParam> oracleParamsInfo, string moduleID)
    {
        return base.Channel.ForceLoadModule(out fieldsInfo, out buttonsInfo, out buttonParamsInfo, out languageInfo, out oracleParamsInfo, moduleID);
    }
    
    public string ExecuteStatistics(out System.DateTime searchTime, string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteStatistics(out searchTime, moduleID, subModule, values);
    }
    //TuDQ sua
    public System.Data.DataSet ExecuteChartQuery(string moduleID, string subModule, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ExecuteChartQuery(moduleID, subModule, values);
    }

    public System.Data.DataSet GetChartInf(System.Collections.Generic.List<string> values)
    {
        return base.Channel.GetChartInf(values);
    }
    //End

    //duchvm 29/6/2016
    public Core.Base.DataContainer ExecuteProcedureFillDatasetWithoutPram(string storeData)
    {
        return base.Channel.ExecuteProcedureFillDatasetWithoutPram(storeData);
    }
    //end duchvm

    //duchvm 16/2/2017
    public Core.Base.DataContainer ProcedureFillDataset(string storeData, System.Collections.Generic.List<string> values)
    {
        return base.Channel.ProcedureFillDataset(storeData, values);
    }
    //end duchvm
}
