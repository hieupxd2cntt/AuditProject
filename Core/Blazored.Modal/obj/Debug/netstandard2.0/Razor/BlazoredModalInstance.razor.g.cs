#pragma checksum "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e99d86e3cbbd75c1df228655805119c218274a7a"
// <auto-generated/>
#pragma warning disable 1591
namespace Blazored.Modal
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 2 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
    public partial class BlazoredModalInstance : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "blazored-modal-container" + " " + (
#line 1 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                                      Position

#line default
#line hidden
            ));
            __builder.AddMarkupContent(2, "\r\n    ");
            __builder.OpenElement(3, "div");
            __builder.AddAttribute(4, "class", "");
            __builder.AddAttribute(5, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 3 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                            HandleBackgroundClick

#line default
#line hidden
            ));
            __builder.CloseElement();
            __builder.AddMarkupContent(6, "\r\n\r\n    ");
            __builder.OpenElement(7, "div");
            __builder.AddAttribute(8, "class", "blazored-modal-wrapper");
            __builder.AddMarkupContent(9, "\r\n        ");
            __builder.OpenElement(10, "div");
            __builder.AddAttribute(11, "class", 
#line 6 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                     Class

#line default
#line hidden
            );
            __builder.AddMarkupContent(12, "\r\n");
#line 7 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
             if (!HideHeader)
            {

#line default
#line hidden
            __builder.AddContent(13, "                ");
            __builder.OpenElement(14, "div");
            __builder.AddAttribute(15, "class", "blazored-modal-header");
            __builder.AddMarkupContent(16, "\r\n                    ");
            __builder.OpenElement(17, "h3");
            __builder.AddAttribute(18, "class", "blazored-modal-title");
            __builder.AddContent(19, 
#line 10 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                                                      Title

#line default
#line hidden
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(20, "\r\n");
#line 11 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                     if (!HideCloseButton)
                    {

#line default
#line hidden
            __builder.AddContent(21, "                        ");
            __builder.OpenElement(22, "button");
            __builder.AddAttribute(23, "type", "button");
            __builder.AddAttribute(24, "class", "blazored-modal-close");
            __builder.AddAttribute(25, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 13 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                                                                                     (() => Parent.CancelInstance(Id))

#line default
#line hidden
            ));
            __builder.AddMarkupContent(26, "\r\n                            ");
            __builder.AddMarkupContent(27, "<span>&times;</span>\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(28, "\r\n");
#line 16 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                    }

#line default
#line hidden
            __builder.AddContent(29, "                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(30, "\r\n");
#line 18 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
            }

#line default
#line hidden
            __builder.AddContent(31, "            ");
            __builder.OpenElement(32, "div");
            __builder.AddAttribute(33, "class", "blazored-modal-content");
            __builder.AddMarkupContent(34, "\r\n                ");
            __Blazor.Blazored.Modal.BlazoredModalInstance.TypeInference.CreateCascadingValue_0(__builder, 35, 36, 
#line 20 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                                       this

#line default
#line hidden
            , 37, (__builder2) => {
                __builder2.AddMarkupContent(38, "\r\n                    ");
                __builder2.AddContent(39, 
#line 21 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
                     Content

#line default
#line hidden
                );
                __builder2.AddMarkupContent(40, "\r\n                ");
            }
            );
            __builder.AddMarkupContent(41, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(42, "\r\n        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(43, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(44, "\r\n");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#line 28 "G:\ATuanLM\AuditProject\Audit\Program\Core\Blazored.Modal\BlazoredModalInstance.razor"
       
    [CascadingParameter] private BlazoredModal Parent { get; set; }
    [CascadingParameter] private ModalOptions GlobalModalOptions { get; set; }

    [Parameter] public ModalOptions Options { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public RenderFragment Content { get; set; }
    [Parameter] public Guid Id { get; set; }

    private string Position { get; set; }
    private string Class { get; set; }
    private bool HideHeader { get; set; }
    private bool HideCloseButton { get; set; }
    private bool DisableBackgroundCancel { get; set; }

    protected override void OnInitialized()
    {
        ConfigureInstance();
    }

    /// <summary>
    /// Sets the title for the modal being displayed
    /// </summary>
    /// <param name="title">Text to display as the title of the modal</param>
    public void SetTitle(string title)
    {
        Title = title;
        StateHasChanged();
    }

    /// <summary>
    /// Closes the modal with a default Ok result />.
    /// </summary>
    public void Close()
    {
        Close(ModalResult.Ok<object>(null));
    }

    /// <summary>
    /// Closes the modal with the specified <paramref name="modalResult"/>.
    /// </summary>
    /// <param name="modalResult"></param>
    public void Close(ModalResult modalResult)
    {
        Parent.DismissInstance(Id, modalResult);
    }

    /// <summary>
    /// Closes the modal and returns a cancelled ModalResult.
    /// </summary>
    public void Cancel()
    {
        Parent.DismissInstance(Id, ModalResult.Cancel());
    }

    private void ConfigureInstance()
    {
        Position = SetPosition();
        Class = SetClass();
        HideHeader = SetHideHeader();
        HideCloseButton = SetHideCloseButton();
        DisableBackgroundCancel = SetDisableBackgroundCancel();
    }

    private string SetPosition()
    {
        ModalPosition position;
        if (Options.Position.HasValue)
        {
            position = Options.Position.Value;
        }
        else if (GlobalModalOptions.Position.HasValue)
        {
            position = GlobalModalOptions.Position.Value;
        }
        else
        {
            position = ModalPosition.Center;
        }

        switch (position)
        {
            case ModalPosition.Center:
                return "blazored-modal-center";
            case ModalPosition.TopLeft:
                return "blazored-modal-topleft";
            case ModalPosition.TopRight:
                return "blazored-modal-topright";
            case ModalPosition.BottomLeft:
                return "blazored-modal-bottomleft";
            case ModalPosition.BottomRight:
                return "blazored-modal-bottomright";
            default:
                return "blazored-modal-center";
        }
    }

    private string SetClass()
    {
        if (!string.IsNullOrWhiteSpace(Options.Class))
            return Options.Class;

        if (!string.IsNullOrWhiteSpace(GlobalModalOptions.Class))
            return GlobalModalOptions.Class;

        return "blazored-modal";
    }

    private bool SetHideHeader()
    {
        if (Options.HideHeader.HasValue)
            return Options.HideHeader.Value;

        if (GlobalModalOptions.HideHeader.HasValue)
            return GlobalModalOptions.HideHeader.Value;

        return false;
    }

    private bool SetHideCloseButton()
    {
        if (Options.HideCloseButton.HasValue)
            return Options.HideCloseButton.Value;

        if (GlobalModalOptions.HideCloseButton.HasValue)
            return GlobalModalOptions.HideCloseButton.Value;

        return false;
    }

    private bool SetDisableBackgroundCancel()
    {
        if (Options.DisableBackgroundCancel.HasValue)
            return Options.DisableBackgroundCancel.Value;

        if (GlobalModalOptions.DisableBackgroundCancel.HasValue)
            return GlobalModalOptions.DisableBackgroundCancel.Value;

        return false;
    }

    private void HandleBackgroundClick()
    {
        if (DisableBackgroundCancel) return;

        Parent.CancelInstance(Id);
    }


#line default
#line hidden
    }
}
namespace __Blazor.Blazored.Modal.BlazoredModalInstance
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateCascadingValue_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.RenderFragment __arg1)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.CascadingValue<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ChildContent", __arg1);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
